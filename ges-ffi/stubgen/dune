(executable
 (name stubgen)
 (modules stubgen)
 (public_name stubgen.exe)
 (libraries ges.bindings ctypes ctypes.foreign))

(executable
 (name types_stubgen)
 (modules types_stubgen)
 (libraries ges.binding.types ctypes.stubs ctypes))

(rule
 (targets ml_types_stubgen.c)
 (deps ./types_stubgen.exe)
 (action (with-stdout-to %{targets} (run %{deps}))))

;; It would be lovely if jenga had rules to build from C.
(rule (targets ctypes_path.txt)
      (action (with-stdout-to %{targets} (run ocamlfind query ctypes))))

(rule
 (targets ml_types_stubgen.exe)
 (deps    (:c ./ml_types_stubgen.c) (:ctypes_path ctypes_path.txt) ../c/libges_c_stubs.a)
 (action (bash "\
%{cc} %{c} -I../c/ \
  -I%{read-lines:ctypes_path.txt} \
  -I %{ocaml_where} -o %{targets}")))
